;;; -*- Mode: TDL; Coding: utf-8 -*-
;;; Nouns

dkaryol := basic-noun-noun-lex &
  [ STEM < "dkaryol" >,
    SYNSEM.LKEYS.KEYREL.PRED "_cup_n_rel" ].

stag := basic-noun-noun-lex &
  [ STEM < "stag" >,
    SYNSEM.LKEYS.KEYREL.PRED "_tiger_n_rel" ].

%60mi__bculngatsam := basic-noun-noun-lex &
  [ STEM < "`mi__bculngatsam" >,
    SYNSEM.LKEYS.KEYREL.PRED "_fifteen_people_n_rel" ].

smyug := basic-noun-noun-lex &
  [ STEM < "smyug" >,
    SYNSEM.LKEYS.KEYREL.PRED "_pen_n_rel" ].

yige := basic-noun-noun-lex &
  [ STEM < "yige" >,
    SYNSEM.LKEYS.KEYREL.PRED "_letter_n_rel" ].

nga := first-person-noun-lex &
  [ STEM < "nga" >,
    SYNSEM.LKEYS.KEYREL.PRED "_I_n_1_rel" ].

kho := 3rd-person-noun-lex &
  [ STEM < "kho" >,
    SYNSEM.LKEYS.KEYREL.PRED "_she_he_n_rel" ].

mo := 3rd-person-noun-lex &
  [ STEM < "mo" >,
    SYNSEM.LKEYS.KEYREL.PRED "_she_n_rel" ].

kyed := 2nd-person-lex-noun-lex &
  [ STEM < "kyed" >,
    SYNSEM.LKEYS.KEYREL.PRED "_you_n_rel" ].

thubbstan := proper-noun-lex-noun-lex &
  [ STEM < "thubbstan" >,
    SYNSEM.LKEYS.KEYREL.PRED "_thubbstan_n_rel" ].

blobzang := proper-noun-lex-noun-lex &
  [ STEM < "blobzang" >,
    SYNSEM.LKEYS.KEYREL.PRED "_lobsang_n_rel" ].

;;; Adjectives

;;; Verbs

yogred := intransitive-verb-lex-verb-lex &
  [ STEM < "yogred" >,
    SYNSEM.LKEYS.KEYREL.PRED "_exist_v_rel" ].

bcag_song := transitive-verb-lex-verb-lex &
  [ STEM < "bcag_song" >,
    SYNSEM.LKEYS.KEYREL.PRED "_break_v_rel" ].

bsad_pa_yin := transitive-verb-lex-verb-lex &
  [ STEM < "bsad_pa_yin" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kill_v_rel" ].

bsad_pa_red := transitive-verb-lex-verb-lex &
  [ STEM < "bsad_pa_red" >,
    SYNSEM.LKEYS.KEYREL.PRED "_kill_v_rel" ].

bris_song := transitive-verb-lex-verb-lex &
  [ STEM < "bris_song" >,
    SYNSEM.LKEYS.KEYREL.PRED "_write_v_rel" ].

%27si_byung := perfective-intransitive-verb-verb-lex &
  [ STEM < "'si_byung" >,
    SYNSEM.LKEYS.KEYREL.PRED "_die_v_rel" ].

gzhus_song := perfective-transitive-dative-verb-lex-verb-lex &
  [ STEM < "gzhus_song" >,
    SYNSEM.LKEYS.KEYREL.PRED "_hit_v_rel" ].

;;; Determiners

cig := determinant-adj-lex-determiner-lex &
  [ STEM < "cig" >,
    SYNSEM.LKEYS.KEYREL.PRED "_a_q_rel" ].
